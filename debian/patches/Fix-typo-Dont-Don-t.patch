From: =?utf-8?q?Ferenc_W=C3=A1gner?= <wferi@niif.hu>
Date: Sun, 13 Sep 2015 20:49:01 +0200
Subject: Fix typo: Dont -> Don't

---
 ChangeLog             |    2 +-
 crmd/fsa_defines.h    |    2 +-
 crmd/messages.c       |    2 +-
 crmd/te_events.c      |    2 +-
 extra/resources/o2cb  |    2 +-
 lib/ais/plugin.c      |    2 +-
 lib/pengine/unpack.c  |    2 +-
 pacemaker.spec.in     |    2 +-
 pengine/regression.sh |   10 +++++-----
 xml/regression.sh     |    8 ++++----
 10 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index a604303..376ff53 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1355,7 +1355,7 @@
 - Reference the new cluster-glue devel package name
 - Update the tarball from upstream to version c9120a53a6ae
   + pengine: Only prevent migration if the clone dependency is stopping/starting on the target node
-  + pengine: Bug 2160 - Dont shuffle clones due to colocation
+  + pengine: Bug 2160 - Don't shuffle clones due to colocation
   + pengine: New implementation of the resource migration (not stop/start) logic
   + Medium: Tools: crm_resource - Prevent use-of-NULL by requiring a resource name for the -A and -a options
   + Medium: pengine: Prevent use-of-NULL in find_first_action()
diff --git a/crmd/fsa_defines.h b/crmd/fsa_defines.h
index ad8ca98..f8ccfb2 100644
--- a/crmd/fsa_defines.h
+++ b/crmd/fsa_defines.h
@@ -247,7 +247,7 @@ enum crmd_fsa_input {
  *
  *======================================*/
 
-         /* Dont do anything */
+         /* Don't do anything */
 #  define	A_NOTHING		0x0000000000000000ULL
 
 /* -- Startup actions -- */
diff --git a/crmd/messages.c b/crmd/messages.c
index 4c47617..4f237e6 100644
--- a/crmd/messages.c
+++ b/crmd/messages.c
@@ -252,7 +252,7 @@ delete_fsa_input(fsa_data_t * fsa_data)
 
             case fsa_dt_none:
                 if (fsa_data->data != NULL) {
-                    crm_err("Dont know how to free %s data from %s",
+                    crm_err("Don't know how to free %s data from %s",
                             fsa_cause2string(fsa_data->fsa_cause), fsa_data->origin);
                     crmd_exit(pcmk_err_generic);
                 }
diff --git a/crmd/te_events.c b/crmd/te_events.c
index 3da9ec8..6200253 100644
--- a/crmd/te_events.c
+++ b/crmd/te_events.c
@@ -342,7 +342,7 @@ match_graph_event(crm_action_t *action, xmlNode *event, int op_status,
             break;
         case PCMK_LRM_OP_CANCELLED:
             /* do nothing?? */
-            crm_err("Dont know what to do for cancelled ops yet");
+            crm_err("Don't know what to do for cancelled ops yet");
             break;
         default:
             /*
diff --git a/extra/resources/o2cb b/extra/resources/o2cb
index 3e45d9b..e8ec42c 100755
--- a/extra/resources/o2cb
+++ b/extra/resources/o2cb
@@ -313,7 +313,7 @@ o2cb_stop() {
 	return $OCF_ERR_GENERIC
     fi
 
-    # Dont unmount configfs - its always in use by libdlm
+    # Don't unmount configfs - its always in use by libdlm
 }
 
 o2cb_monitor() {
diff --git a/lib/ais/plugin.c b/lib/ais/plugin.c
index ab534fa..a471934 100644
--- a/lib/ais/plugin.c
+++ b/lib/ais/plugin.c
@@ -1486,7 +1486,7 @@ route_ais_message(const AIS_Message * msg, gboolean local_origin)
     }
 
     if (check_message_sanity(mutable, mutable->data) == FALSE) {
-        /* Dont send this message to anyone */
+        /* Don't send this message to anyone */
         rc = 1;
         goto bail;
     }
diff --git a/lib/pengine/unpack.c b/lib/pengine/unpack.c
index 6dc44fd..7bb8366 100644
--- a/lib/pengine/unpack.c
+++ b/lib/pengine/unpack.c
@@ -3057,7 +3057,7 @@ unpack_rsc_op(resource_t * rsc, node_t * node, xmlNode * xml_op,
     switch (status) {
         case PCMK_LRM_OP_CANCELLED:
             /* do nothing?? */
-            pe_err("Dont know what to do for cancelled ops yet");
+            pe_err("Don't know what to do for cancelled ops yet");
             break;
 
         case PCMK_LRM_OP_PENDING:
diff --git a/pacemaker.spec.in b/pacemaker.spec.in
index 98cefa8..5781021 100644
--- a/pacemaker.spec.in
+++ b/pacemaker.spec.in
@@ -301,7 +301,7 @@ find %{buildroot} -name '*.xsl' -type f -print0 | xargs -0 chmod a-x
 find %{buildroot} -name '*.rng' -type f -print0 | xargs -0 chmod a-x
 find %{buildroot} -name '*.dtd' -type f -print0 | xargs -0 chmod a-x
 
-# Dont package static libs
+# Don't package static libs
 find %{buildroot} -name '*.a' -type f -print0 | xargs -0 rm -f
 find %{buildroot} -name '*.la' -type f -print0 | xargs -0 rm -f
 
diff --git a/pengine/regression.sh b/pengine/regression.sh
index a5e3ffa..601d79d 100755
--- a/pengine/regression.sh
+++ b/pengine/regression.sh
@@ -333,10 +333,10 @@ do_test inc11 "Primitive colocation with clones"
 do_test inc12 "Clone shutdown"
 do_test cloned-group "Make sure only the correct number of cloned groups are started"
 do_test cloned-group-stop "Ensure stopping qpidd also stops glance and cinder"
-do_test clone-no-shuffle "Dont prioritize allocation of instances that must be moved"
+do_test clone-no-shuffle "Don't prioritize allocation of instances that must be moved"
 do_test clone-max-zero "Orphan processing with clone-max=0"
 do_test clone-anon-dup "Bug LF#2087 - Correctly parse the state of anonymous clones that are active more than once per node"
-do_test bug-lf-2160 "Dont shuffle clones due to colocation"
+do_test bug-lf-2160 "Don't shuffle clones due to colocation"
 do_test bug-lf-2213 "clone-node-max enforcement for cloned groups"
 do_test bug-lf-2153 "Clone ordering constraints"
 do_test bug-lf-2361 "Ensure clones observe mandatory ordering constraints if the LHS is unrunnable"
@@ -384,8 +384,8 @@ do_test master-ordering "Prevent resources from starting that need a master"
 do_test bug-1765 "Master-Master Colocation (dont stop the slaves)"
 do_test master-group "Promotion of cloned groups"
 do_test bug-lf-1852 "Don't shuffle master/slave instances unnecessarily"
-do_test master-failed-demote "Dont retry failed demote actions"
-do_test master-failed-demote-2 "Dont retry failed demote actions (notify=false)"
+do_test master-failed-demote "Don't retry failed demote actions"
+do_test master-failed-demote-2 "Don't retry failed demote actions (notify=false)"
 do_test master-depend "Ensure resources that depend on the master don't get allocated until the master does"
 do_test master-reattach "Re-attach to a running master"
 do_test master-allow-start "Don't include master score if it would prevent allocation"
@@ -471,7 +471,7 @@ do_test stonith-4 "Stonith node state" --rc 4
 do_test bug-1572-1 "Recovery of groups depending on master/slave"
 do_test bug-1572-2 "Recovery of groups depending on master/slave when the master is never re-promoted"
 do_test bug-1685 "Depends-on-master ordering"
-do_test bug-1822 "Dont promote partially active groups"
+do_test bug-1822 "Don't promote partially active groups"
 do_test bug-pm-11 "New resource added to a m/s group"
 do_test bug-pm-12 "Recover only the failed portion of a cloned group"
 do_test bug-n-387749 "Don't shuffle clone instances"
diff --git a/xml/regression.sh b/xml/regression.sh
index db7fc97..ed6b5c8 100755
--- a/xml/regression.sh
+++ b/xml/regression.sh
@@ -204,7 +204,7 @@ do_test inc10 "Non-unique clone (stop)"
 do_test inc11 "Primitive colocation with clones" 
 do_test inc12 "Clone shutdown" 
 do_test cloned-group "Make sure only the correct number of cloned groups are started"
-do_test clone-no-shuffle "Dont prioritize allocation of instances that must be moved"
+do_test clone-no-shuffle "Don't prioritize allocation of instances that must be moved"
 
 echo ""
 do_test master-0 "Stopped -> Slave"
@@ -228,8 +228,8 @@ do_test master-ordering "Prevent resources from starting that need a master"
 do_test bug-1765 "Master-Master Colocation (dont stop the slaves)"
 do_test master-group "Promotion of cloned groups"
 do_test bug-lf-1852 "Don't shuffle master/slave instances unnecessarily"
-do_test master-failed-demote "Dont retry failed demote actions"
-do_test master-failed-demote-2 "Dont retry failed demote actions (notify=false)"
+do_test master-failed-demote "Don't retry failed demote actions"
+do_test master-failed-demote-2 "Don't retry failed demote actions (notify=false)"
 do_test master-depend "Ensure resources that depend on the master don't get allocated until the master does"
 
 echo ""
@@ -275,7 +275,7 @@ do_test stonith-2 "Stonith loop - 3"
 do_test bug-1572-1 "Recovery of groups depending on master/slave"
 do_test bug-1572-2 "Recovery of groups depending on master/slave when the master is never re-promoted"
 do_test bug-1685 "Depends-on-master ordering"
-do_test bug-1822 "Dont promote partially active groups"
+do_test bug-1822 "Don't promote partially active groups"
 do_test bug-pm-11 "New resource added to a m/s group"
 do_test bug-pm-12 "Recover only the failed portion of a cloned group"
 do_test bug-n-387749 "Don't shuffle clone instances"
